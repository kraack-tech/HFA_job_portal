# Generated by Django 5.0.1 on 2024-08-29 07:34

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        migrations.swappable_dependency(settings.NOTIFICATIONS_NOTIFICATION_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact', models.CharField(max_length=42)),
                ('sender', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(default='')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('liaison', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='liaison', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CitizenFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField(blank=True, null=True)),
                ('job_satisfaction', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=1)),
                ('work_hours', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=1)),
                ('tasks', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=1)),
                ('social_level', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=1)),
                ('stress_level', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=1)),
                ('support_level', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=1)),
                ('overall_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('feedback_date', models.DateTimeField(auto_now_add=True)),
                ('citizen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CitizenProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField(default=0)),
                ('experience', models.IntegerField(default=0)),
                ('job_field', models.CharField(choices=[('it', 'IT'), ('engineering', 'Engineering'), ('management ', 'Management '), ('teaching', 'Teaching'), ('social/health', 'Social/Health'), ('trade/service', 'Trade/Service'), ('sales', 'Sales'), ('law', 'Law'), ('industry', 'Industry'), ('craft', 'Craft'), ('office', 'Office'), ('finance', 'Finance'), ('other', 'Other')], default='other', max_length=20)),
                ('job_type', models.CharField(choices=[('full-time', 'Full Time'), ('part-time', 'Part Time'), ('contract', 'Contract'), ('freelance', 'Freelance'), ('internship', 'Internship'), ('temporary', 'Temporary'), ('other', 'Other')], default='other', max_length=20)),
                ('support_grants', models.CharField(choices=[('none', 'None'), ('10%', '10%'), ('20%', '20%'), ('30%', '30%'), ('40%', '40%'), ('50%', '50%'), ('60%', '60%'), ('70%', '70%'), ('80%', '80%'), ('90%', '90%'), ('100%', '100%'), ('other', 'Other')], default='other', max_length=7)),
                ('education', models.CharField(choices=[('none', 'None'), ('primary', 'Primary'), ('lower secondary', 'Lower Secondary'), ('upper secondary', 'Upper Secondary'), ('short tertiary', 'Short Tertiary'), ('bachelor', 'Bachelor'), ('master', ' Master'), ('phd', 'PhD'), ('doctoral', 'Doctoral'), ('other', 'Other')], default='other', max_length=20)),
                ('employed', models.BooleanField(default='False')),
                ('employment_date', models.DateTimeField(blank=True, null=True)),
                ('employer_feedback', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('citizen_feedback', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('contact_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_person', to=settings.AUTH_USER_MODEL)),
                ('employer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employer', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContactProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.JSONField(default=dict)),
                ('extra', models.JSONField(default=dict)),
                ('notification', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='custom_notification', to=settings.NOTIFICATIONS_NOTIFICATION_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployerFacilities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sound_level', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('team_count', models.IntegerField(default=0)),
                ('layout', models.CharField(choices=[('traditional ', 'Traditional'), ('open plan', 'Open Plan'), ('cubicle', 'Cubicle'), ('team-based', 'Team-based'), ('hot desking', 'Hot Desking'), ('individual', 'Individual'), ('abw', 'ABW'), ('other', 'Other')], default='other', max_length=20)),
                ('support_service', models.BooleanField(default=False)),
                ('field', models.CharField(choices=[('it', 'IT'), ('engineering', 'Engineering'), ('management ', 'Management '), ('teaching', 'Teaching'), ('social/health', 'Social/Health'), ('trade/service', 'Trade/Service'), ('sales', 'Sales'), ('law', 'Law'), ('industry', 'Industry'), ('craft', 'Craft'), ('office', 'Office'), ('finance', 'Finance'), ('other', 'Other')], default='other', max_length=20)),
                ('employer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployerFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField(blank=True, null=True)),
                ('punctuality', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=1)),
                ('attendance', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=1)),
                ('dependability', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=1)),
                ('work_quality', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=1)),
                ('communication', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=1)),
                ('attitude', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=1)),
                ('overall_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('feedback_date', models.DateTimeField(auto_now_add=True)),
                ('citizen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='citizen', to=settings.AUTH_USER_MODEL)),
                ('employer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('job_field', models.CharField(choices=[('it', 'IT'), ('engineering', 'Engineering'), ('management ', 'Management '), ('teaching', 'Teaching'), ('social/health', 'Social/Health'), ('trade/service', 'Trade/Service'), ('sales', 'Sales'), ('law', 'Law'), ('industry', 'Industry'), ('craft', 'Craft'), ('office', 'Office'), ('finance', 'Finance'), ('other', 'Other')], default='other', max_length=20)),
                ('job_type', models.CharField(choices=[('full-time', 'Full Time'), ('part-time', 'Part Time'), ('contract', 'Contract'), ('freelance', 'Freelance'), ('internship', 'Internship'), ('temporary', 'Temporary'), ('other', 'Other')], default='full-time', max_length=20)),
                ('education', models.CharField(choices=[('none', 'None'), ('primary ', 'Primary '), ('lower secondary', 'Lower Secondary'), ('upper secondary', 'Upper Secondary'), ('short tertiary', 'Short Tertiary'), ('bachelor', 'Bachelor'), ('master', ' Master'), ('phd', 'PhD'), ('doctoral', 'Doctoral'), ('other', 'Other')], default='other', max_length=20)),
                ('posted_date', models.DateTimeField(auto_now_add=True)),
                ('applicants', models.ManyToManyField(blank=True, related_name='applied_jobs', to=settings.AUTH_USER_MODEL)),
                ('employer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsibilities', models.TextField()),
                ('requirements', models.TextField()),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_descriptions', to='spectrumjobs.job')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('read', models.BooleanField(default=False)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SensoryProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auditory', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('visual', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('smell', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('tactile', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('movement', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('citizen', 'Citizen'), ('liaison', 'Liaison'), ('employer', 'Employer'), ('none', 'None')], default='none', max_length=10)),
                ('DK_user', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default='', max_length=3)),
                ('contact_person', models.CharField(blank=True, max_length=50, null=True)),
                ('first_name', models.CharField(default='', max_length=150)),
                ('last_name', models.CharField(default='', max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(default='', max_length=20)),
                ('address', models.CharField(default='', max_length=150)),
                ('city', models.CharField(default='', max_length=150)),
                ('postcode', models.CharField(default='', max_length=5)),
                ('totp_secret_key', models.CharField(blank=True, max_length=64, null=True)),
                ('is_2fa_enabled', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
